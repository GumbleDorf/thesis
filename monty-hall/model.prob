%The following problog program models the monty hall problem in a way that incorporates some GDL-III concepts
role(1). role(0).

%The following 3 predicates are public knowledge at
init(step(1)). 
init(closed(door(1))). 
init(closed(door(2))).
init(closed(door(3))).

%Candidate thinks of every possible car placement
1/P::update(knows(1,car(door(X)))) :-
    not knows(1, step(2)),
    not knows(1, step(3)),
    not knows(1, step(4)),
    knows(1,step(1)),
    knows(1, closed(door(X))),
    findall(Y,legal(0, hide_car(door(Y))),Doors),
    length(Doors,P), 
    P > 0.

%Steps: probability of making a move
update(knows(1, car(door(X)))) :- knows(1, car(door(X))).

1/P::update(knows(1,legal(0,open_door(door(X))))) :-
    knows(1,step(2)),
    not knows(1, step(3)),
    not knows(1, step(4)),
    knows(1,closed(door(X))),
    not knows(1, car(door(X))),
    not does(1,choose(door(X))),
    findall(Y,possible_open_door(Y),Doors),
    length(Doors,P), 
    P > 0.

possible_open_door(X) :-
    knows(1,step(2)), knows(1,closed(door(X))),not knows(1,car(door(X))),not does(1,choose(door(X))).

% A correct prediction rule
correct(knows(1,legal(0,open_door(door(X))))) :- does(0, open_door(door(X))), ptrue(step(2)).

update(knows(1, closed(door(X)))) :-
    not does(0, open_door(door(X))), knows(1, closed(door(X))).

sees(1, chosen(door(X))) :- does(1, choose(door(X))).
sees(1, not car(door(X))) :- does(0,open_door(door(X))).
sees(1, not closed(door(X))) :- does(0,open_door(door(X))).


legal(0,hide_car(door(X))) :- ptrue(step(1)),ptrue(closed(door(X))).
legal(0,open_door(door(X))) :- ptrue(step(2)),ptrue(closed(door(X))),not ptrue(car(door(X))),not ptrue(chosen(door(X))).
legal(0,noop) :- ptrue(step(3)).

legal(1,choose(door(X))) :- ptrue(step(1)),ptrue(closed(door(X))).
legal(1,noop) :- ptrue(step(2)).
legal(1,noop) :- ptrue(step(3)).
legal(1,switch) :- ptrue(step(3)).

%Sees are only applicable the turn after they are ptrue, after which point they become known by player X
sees(1,not car(door(X))) :- does(0,open_door(door(X))).
sees(1,car(door(X))) :- ptrue(step(3)), ptrue(car(door(X))).

next(car(door(X))) :- does(0,hide_car(door(X))).
next(car(door(X))) :- ptrue(car(door(X))).
next(closed(door(X))) :- ptrue(closed(door(X))),not does(0,open_door(door(X))).
next(chosen(door(X))) :- does(1,choose(door(X))).
next(chosen(door(X))) :- ptrue(chosen(door(X))),not does(1,switch).
next(chosen(door(X))) :- does(1,switch),ptrue(closed(door(X))),not ptrue(chosen(door(X))).
next(step(2)) :- ptrue(step(1)).
next(step(3)) :- ptrue(step(2)).
next(step(4)) :- ptrue(step(3)).

terminal :- ptrue(step(4)).

goal(1,100) :- ptrue(chosen(door(X))), ptrue(car(door(X))).
goal(1, 0) :- ptrue(chosen(door(X))), not ptrue(car(door(X))).
goal(0,0).


